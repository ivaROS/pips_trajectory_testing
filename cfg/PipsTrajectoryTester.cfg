#!/usr/bin/env python
PACKAGE = "pips_trajectory_testing"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
gen.add("tf", double_t, 0, "Duration to simulate trajectory",    10, 1,   20)
gen.add("dt", double_t, 0, "Delta T between points in generated trajectory",    .1, 0.01,   1)

gen.add("cp", double_t, 0, "Proportional gain for near-identity",    1, 0.01,   1000)
gen.add("cd", double_t, 0, "Derivative gain for near-identity",    5, 0.01,   1000)
gen.add("cl", double_t, 0, "Lambda gain for near-identity",    1, 0.01,   1000)
gen.add("eps", double_t, 0, "Epsilon for near-identity",    .01, 0.001,   1)

gen.add("v_max", double_t, 0, "Max linear velocity",    .35, 0.001,   .7) #.7 is the stated max vel
gen.add("w_max", double_t, 0, "Max rotational velocity",    3, 0.001,   5) #180deg/s is the base max, though over 110deg/s can throw off the gyro
gen.add("a_max", double_t, 0, "Max linear acceleration",    .3, 0.001,   .55)
gen.add("w_dot_max", double_t, 0, "Max rotational acceleration",    1, 0.001,   1.78)


gen.add("parallelism",   bool_t,   0, "Generate trajectories in parallel",  True)

gen.add("collision_details",   bool_t,   0, "Compute the detailed locations of collisions",  True)

exit(gen.generate(PACKAGE, "pips_controller", "PipsTrajectoryTester"))
